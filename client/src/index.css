@tailwind base;
@tailwind components;
@tailwind utilities;

/* LIGHT MODE */
:root {
  --button-outline: rgba(0,0,0, .10);
  --badge-outline: rgba(0,0,0, .05);

  /* Automatic computation of border around primary / danger buttons */
  --opaque-button-border-intensity: -8; /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(0,0,0, .03);
  --elevate-2: rgba(0,0,0, .08);

  /* TNT Fitness Exact Brand Colors */
  --tnt-navy: #0B2545;
  --tnt-indigo: #243B6B;
  --tnt-gold: #D4A017;
  
  /* Radius Tokens */
  --radius-sm: 10px;
  --radius-md: 14px;
  --radius-lg: 20px;

  /* TNT Fitness Brand Colors */
  --background: 0 0% 99%;
  --foreground: 213 60% 16%;
  --border: 213 40% 85%;
  --card: 0 0% 97%;
  --card-foreground: 213 60% 16%;
  --card-border: 213 40% 82%;
  --sidebar: 213 40% 93%;
  --sidebar-foreground: 213 60% 16%;
  --sidebar-border: 213 40% 84%;
  --sidebar-primary: 46 84% 46%; /* Gold #D4A017 */
  --sidebar-primary-foreground: 213 60% 16%;
  --sidebar-accent: 219 50% 30%; /* Indigo */
  --sidebar-accent-foreground: 0 0% 99%;
  --sidebar-ring: 46 84% 46%;
  --popover: 213 15% 91%;
  --popover-foreground: 213 60% 16%;
  --popover-border: 213 15% 82%;
  --primary: 46 84% 46%; /* Gold #D4A017 */
  --primary-foreground: 213 60% 16%;
  --secondary: 213 60% 20%; /* Navy #0B2545 */
  --secondary-foreground: 0 0% 99%;
  --muted: 213 20% 89%;
  --muted-foreground: 213 30% 45%;
  --accent: 219 50% 30%; /* Indigo #243B6B */
  --accent-foreground: 0 0% 99%;
  --destructive: 0 75% 45%;
  --destructive-foreground: 0 0% 99%;
  --input: 213 20% 70%;
  --ring: 46 84% 46%;
  --chart-1: 46 81% 40%;
  --chart-2: 213 60% 25%;
  --chart-3: 219 50% 35%;
  --chart-4: 30 75% 50%;
  --chart-5: 150 60% 40%;

  --font-sans: Inter, sans-serif;
  --font-display: Montserrat, sans-serif;
  --font-heading: Montserrat, sans-serif;
  --font-serif: Georgia, serif;
  --font-mono: Menlo, monospace;
  --radius: 14px;
  --shadow-2xs: 0px 1px 2px 0px hsl(280 15% 10% / 0.05);
  --shadow-xs: 0px 1px 2px 0px hsl(280 15% 10% / 0.06);
  --shadow-sm: 0px 1px 3px 0px hsl(280 15% 10% / 0.08), 0px 1px 2px -1px hsl(280 15% 10% / 0.08);
  --shadow: 0px 1px 3px 0px hsl(280 15% 10% / 0.09), 0px 1px 2px -1px hsl(280 15% 10% / 0.09);
  --shadow-md: 0px 4px 6px -1px hsl(280 15% 10% / 0.09), 0px 2px 4px -2px hsl(280 15% 10% / 0.09);
  --shadow-lg: 0px 10px 15px -3px hsl(280 15% 10% / 0.09), 0px 4px 6px -4px hsl(280 15% 10% / 0.09);
  --shadow-xl: 0px 20px 25px -5px hsl(280 15% 10% / 0.09), 0px 8px 10px -6px hsl(280 15% 10% / 0.09);
  --shadow-2xl: 0px 25px 50px -12px hsl(280 15% 10% / 0.22);
  --tracking-normal: 0em;
  --spacing: 0.25rem;
  
  /* Animation Timing Functions */
  --ease-smooth: cubic-bezier(0.4, 0, 0.2, 1);
  --ease-bounce: cubic-bezier(0.68, -0.55, 0.265, 1.55);
  --ease-elastic: cubic-bezier(0.68, -0.6, 0.32, 1.6);

  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */

  /* Fallback for older browsers */
  --sidebar-primary-border: hsl(var(--sidebar-primary));
  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --sidebar-accent-border: hsl(var(--sidebar-accent));
  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --primary-border: hsl(var(--primary));
  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --secondary-border: hsl(var(--secondary));
  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --muted-border: hsl(var(--muted));
  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --accent-border: hsl(var(--accent));
  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --destructive-border: hsl(var(--destructive));
  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
}

.dark {
  --button-outline: rgba(255,255,255, .10);
  --badge-outline: rgba(255,255,255, .05);

  --opaque-button-border-intensity: 9;  /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(255,255,255, .04);
  --elevate-2: rgba(255,255,255, .09);

  /* TNT Fitness Brand Colors - Dark Mode */
  --background: 213 60% 8%; /* Dark Navy */
  --foreground: 0 0% 98%;
  --border: 213 50% 20%;
  --card: 213 60% 12%;
  --card-foreground: 0 0% 98%;
  --card-border: 213 50% 22%;
  --sidebar: 213 60% 14%;
  --sidebar-foreground: 0 0% 98%;
  --sidebar-border: 213 50% 24%;
  --sidebar-primary: 46 84% 46%; /* Gold #D4A017 */
  --sidebar-primary-foreground: 213 60% 16%;
  --sidebar-accent: 219 50% 40%; /* Indigo */
  --sidebar-accent-foreground: 0 0% 98%;
  --sidebar-ring: 46 84% 46%;
  --popover: 213 60% 14%;
  --popover-foreground: 0 0% 98%;
  --popover-border: 213 50% 22%;
  --primary: 46 84% 46%; /* Gold #D4A017 */
  --primary-foreground: 213 60% 16%;
  --secondary: 213 60% 16%; /* Navy */
  --secondary-foreground: 0 0% 98%;
  --muted: 213 40% 22%;
  --muted-foreground: 0 0% 70%;
  --accent: 219 50% 40%; /* Indigo */
  --accent-foreground: 0 0% 98%;
  --destructive: 0 70% 45%;
  --destructive-foreground: 0 0% 98%;
  --input: 213 40% 25%;
  --ring: 46 84% 46%;
  --chart-1: 46 81% 55%;
  --chart-2: 213 60% 35%;
  --chart-3: 219 50% 45%;
  --chart-4: 30 70% 65%;
  --chart-5: 150 55% 60%;

  --shadow-2xs: 0px 1px 2px 0px hsl(0 0% 0% / 0.40);
  --shadow-xs: 0px 1px 2px 0px hsl(0 0% 0% / 0.45);
  --shadow-sm: 0px 1px 3px 0px hsl(0 0% 0% / 0.50), 0px 1px 2px -1px hsl(0 0% 0% / 0.50);
  --shadow: 0px 1px 3px 0px hsl(0 0% 0% / 0.55), 0px 1px 2px -1px hsl(0 0% 0% / 0.55);
  --shadow-md: 0px 4px 6px -1px hsl(0 0% 0% / 0.55), 0px 2px 4px -2px hsl(0 0% 0% / 0.55);
  --shadow-lg: 0px 10px 15px -3px hsl(0 0% 0% / 0.55), 0px 4px 6px -4px hsl(0 0% 0% / 0.55);
  --shadow-xl: 0px 20px 25px -5px hsl(0 0% 0% / 0.55), 0px 8px 10px -6px hsl(0 0% 0% / 0.55);
  --shadow-2xl: 0px 25px 50px -12px hsl(0 0% 0% / 0.70);

  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */
  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply font-sans antialiased text-foreground;
  }
}

/**
 * Using the elevate system.
 * Automatic contrast adjustment.
 *
 * <element className="hover-elevate" />
 * <element className="active-elevate-2" />
 *
 * // Using the tailwind utility when a data attribute is "on"
 * <element className="toggle-elevate data-[state=on]:toggle-elevated" />
 * // Or manually controlling the toggle state
 * <element className="toggle-elevate toggle-elevated" />
 *
 * Elevation systems have to handle many states.
 * - not-hovered, vs. hovered vs. active  (three mutually exclusive states)
 * - toggled or not
 * - focused or not (this is not handled with these utilities)
 *
 * Even without handling focused or not, this is six possible combinations that
 * need to be distinguished from eachother visually.
 */
@layer utilities {
  
  /* Focus indicators for accessibility */
  *:focus-visible {
    outline: 2px solid hsl(var(--ring));
    outline-offset: 2px;
    border-radius: var(--radius-sm);
  }
  
  /* Ensure proper touch targets for mobile */
  button, a {
    position: relative;
  }
  
  /* Add invisible touch area extension for small interactive elements */
  button::before,
  a[role="button"]::before {
    content: "";
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    min-width: 44px;
    min-height: 44px;
    pointer-events: none;
  }
  
  /* Smooth scrolling for better UX */
  html {
    scroll-behavior: smooth;
  }
  
  @media (prefers-reduced-motion: reduce) {
    html {
      scroll-behavior: auto;
    }
  }

  /* Hide ugly search cancel button in Chrome until we can style it properly */
  input[type="search"]::-webkit-search-cancel-button {
    @apply hidden;
  }

  /* Placeholder styling for contentEditable div */
  [contenteditable][data-placeholder]:empty::before {
    content: attr(data-placeholder);
    color: hsl(var(--muted-foreground));
    pointer-events: none;
  }

  /* .no-default-hover-elevate/no-default-active-elevate is an escape hatch so consumers of
   * buttons/badges can remove the automatic brightness adjustment on interactions
   * and program their own. */
  .no-default-hover-elevate {}

  .no-default-active-elevate {}


  /**
   * Toggleable backgrounds go behind the content. Hoverable/active goes on top.
   * This way they can stack/compound. Both will overlap the parent's borders!
   * So borders will be automatically adjusted both on toggle, and hover/active,
   * and they will be compounded.
   */
  .toggle-elevate::before,
  .toggle-elevate-2::before {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: -1;
    /* sits behind content but above backdrop */
  }

  .toggle-elevate.toggle-elevated::before {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.toggle-elevate::before {
    inset: -1px;
  }

  /* Does not work on elements with overflow:hidden! */
  .hover-elevate:not(.no-default-hover-elevate),
  .active-elevate:not(.no-default-active-elevate),
  .hover-elevate-2:not(.no-default-hover-elevate),
  .active-elevate-2:not(.no-default-active-elevate) {
    position: relative;
    z-index: 0;
  }

  .hover-elevate:not(.no-default-hover-elevate)::after,
  .active-elevate:not(.no-default-active-elevate)::after,
  .hover-elevate-2:not(.no-default-hover-elevate)::after,
  .active-elevate-2:not(.no-default-active-elevate)::after {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: 999;
    /* sits in front of content */
  }

  .hover-elevate:hover:not(.no-default-hover-elevate)::after,
  .active-elevate:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-1);
  }

  .hover-elevate-2:hover:not(.no-default-hover-elevate)::after,
  .active-elevate-2:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate-2:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate-2:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after {
    inset: -1px;
  }
  
  /* Shimmer effect for skeleton loading */
  @keyframes shimmer {
    0% {
      background-position: -1000px 0;
    }
    100% {
      background-position: 1000px 0;
    }
  }
  
  .skeleton-shimmer {
    background: linear-gradient(
      90deg,
      hsl(var(--muted) / 0.5) 25%,
      hsl(var(--muted) / 0.7) 50%,
      hsl(var(--muted) / 0.5) 75%
    );
    background-size: 1000px 100%;
    animation: shimmer 2s infinite;
  }
  
  /* Fade in animation for viewport entry */
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  @keyframes fadeInScale {
    from {
      opacity: 0;
      transform: scale(0.95);
    }
    to {
      opacity: 1;
      transform: scale(1);
    }
  }
  
  /* Ripple effect for buttons */
  @keyframes ripple {
    0% {
      transform: scale(0);
      opacity: 1;
    }
    100% {
      transform: scale(4);
      opacity: 0;
    }
  }
  
  .ripple {
    position: absolute;
    border-radius: 50%;
    background: rgba(255, 255, 255, 0.7);
    transform: scale(0);
    animation: ripple 0.6s ease-out;
    pointer-events: none;
  }
  
  /* Gold gradient animation */
  @keyframes goldGradient {
    0% {
      background-position: 0% 50%;
    }
    50% {
      background-position: 100% 50%;
    }
    100% {
      background-position: 0% 50%;
    }
  }
  
  .gold-gradient-animate {
    background: linear-gradient(
      135deg,
      hsl(var(--primary)) 0%,
      hsl(46 90% 55%) 50%,
      hsl(var(--primary)) 100%
    );
    background-size: 200% 200%;
    animation: goldGradient 3s ease infinite;
  }
  
  /* Success animation */
  @keyframes successCheckmark {
    0% {
      stroke-dashoffset: 100;
    }
    100% {
      stroke-dashoffset: 0;
    }
  }
  
  /* Parallax text effect */
  .parallax-text {
    will-change: transform;
    transition: transform 0.5s var(--ease-smooth);
  }
  
  /* Card lift effect */
  .card-lift {
    transition: all 0.3s var(--ease-smooth);
    will-change: transform, box-shadow;
  }
  
  .card-lift:hover {
    transform: translateY(-8px);
    box-shadow: 
      0 20px 40px -15px rgba(0, 0, 0, 0.3),
      0 10px 20px -5px hsl(var(--primary) / 0.2);
  }
  
  /* Smooth page transitions */
  .page-transition-enter {
    animation: fadeInScale 0.4s var(--ease-smooth) forwards;
  }
  
  .page-transition-exit {
    animation: fadeInScale 0.3s var(--ease-smooth) reverse forwards;
  }
  
  /* Enhanced mobile menu animation */
  .menu-slide-in {
    animation: slideInRight 0.3s var(--ease-smooth) forwards;
  }
  
  @keyframes slideInRight {
    from {
      transform: translateX(100%);
      opacity: 0;
    }
    to {
      transform: translateX(0);
      opacity: 1;
    }
  }
  
  /* Button scale animation */
  .btn-scale {
    transition: transform 0.2s var(--ease-bounce);
    will-change: transform;
  }
  
  .btn-scale:hover {
    transform: scale(1.05);
  }
  
  .btn-scale:active {
    transform: scale(0.98);
  }
  
  /* Viewport observer animations */
  .animate-on-scroll {
    opacity: 0;
    transform: translateY(30px);
    transition: all 0.8s var(--ease-smooth);
  }
  
  .animate-on-scroll.visible {
    opacity: 1;
    transform: translateY(0);
  }
  
  /* Progressive image loading */
  .progressive-image {
    filter: blur(5px);
    transition: filter 0.3s var(--ease-smooth);
  }
  
  .progressive-image.loaded {
    filter: blur(0);
  }
  
  /* Loading progress bar */
  @keyframes loadingProgress {
    0% {
      transform: scaleX(0);
    }
    100% {
      transform: scaleX(1);
    }
  }
  
  .loading-progress {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    height: 3px;
    background: linear-gradient(
      90deg,
      hsl(var(--primary)),
      hsl(46 90% 55%)
    );
    transform-origin: left;
    animation: loadingProgress 2s var(--ease-smooth);
    z-index: 9999;
  }
}